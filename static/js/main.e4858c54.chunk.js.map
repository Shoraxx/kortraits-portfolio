{"version":3,"sources":["home_wheel.svg","about_wheel.svg","projects_wheel.svg","medium.svg","linked-in.svg","components/Wheel.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Wheel","react_default","a","createElement","className","this","props","src","alt","Component","NavBar","links","map","link","onClick","anchor","key","text","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","indexRef","React","createRef","projectsRef","aboutRef","ref","window","scrollTo","top","current","offsetTop","behavior","_this2","scroll","Fragment","components_NavBar","concat","components_Wheel","indexWheel","href","projectsWheel","aboutWheel","medium","linkedin","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4858c54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home_wheel.37d826c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/about_wheel.c797ff6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/projects_wheel.5cd723b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/medium.c86c5c23.svg\";","module.exports = __webpack_public_path__ + \"static/media/linked-in.f7a728bc.svg\";","import React, { Component } from 'react'\n\nclass Wheel extends Component {\n  render () {\n    return (\n      <div className={this.props.className}>\n        <img src={this.props.src} alt={this.props.alt} />\n      </div>\n    )\n  }\n}\n\nexport default Wheel\n","import React, { Component } from 'react'\nclass NavBar extends Component {\n  render () {\n\n    return (\n          <nav className={this.props.className}>\n            <ul>\n              {\n                this.props.links.map(link => (\n                  <li className=\"link\" onClick={link.anchor} key={link.text}>\n                    {link.text}\n                  </li>\n                ))\n              }\n            </ul>\n          </nav>\n          \n    )\n  }\n}\n\nexport default NavBar\n","import React, { Component } from 'react'\nimport Wheel from \"./components/Wheel\"\nimport indexWheel from './home_wheel.svg'\nimport aboutWheel from './about_wheel.svg'\nimport projectsWheel from './projects_wheel.svg'\nimport NavBar from \"./components/NavBar\"\nimport medium from \"./medium.svg\"\nimport linkedin from \"./linked-in.svg\"\nimport './App.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.indexRef = React.createRef()\n    this.projectsRef = React.createRef()\n    this.aboutRef = React.createRef()\n  }\n\n  scroll(ref) {\n    window.scrollTo({\n      top:this[ref].current.offsetTop, \n      behavior: \"smooth\"\n  })  }\n  \n  render() {    \n    const links = [\n      { text: \"Projects\", anchor: ()=> this.scroll(\"projectsRef\") },\n      { text: \"About me\", anchor: ()=> this.scroll(\"aboutRef\") }\n    ]\n\n    return (\n      <>\n        <div className='border' ref={this.indexRef}>\n          <div className='main'>\n            <NavBar links={links} className=\"nav\" />\n            <div className='content'>\n              <div className={`text ${this.props[\"text-align\"]}`}>\n                <h1 className='blog-name'>Kortraits</h1>\n                <hr className='hr' />\n                <p className='author-name'>Karla Vidal Chi</p>\n              </div>\n              <Wheel className=\"wheel\" src={indexWheel} alt=\"logo\" />\n            </div>\n            <div className='media' />\n          </div>\n        </div>\n\n        <div className='border' ref={this.projectsRef}>\n          <div className='main lines'>\n            <NavBar links={links} className=\"nav\" />\n            <div className='content'>\n              <div className={`text left`}>\n                <h2 className=\"app-name\">Popakorn</h2>\n                <p className=\"app-text\">Es una aplicación de escritorio donde recibes contenido personalizado de todas las plataformas de contenido multimedia a la que estés suscrito (Netflix, HBO, etc) además de poder recibir recomendaciones aleatorias para no tener que pensar en qué ver.</p>\n                <p className=\"app-link\"><a className=\"link\" href=\"https://medium.com/@karlavidalchi/popakorn-6c77d43d0d\">Saber más</a></p>\n              </div>\n              <Wheel className=\"wheel\" src={projectsWheel} alt=\"logo\" />\n            </div>\n            <div className='media' />\n          </div>\n        </div>\n\n        <div className='border' ref={this.aboutRef}>\n          <div className='main lines'>\n            <NavBar links={links} className=\"nav\" />\n            <div className='content'>\n              <div className={`text left`}>\n                <h2 className=\"app-name\">Karla Vidal Chi</h2>\n                <p className=\"app-text\">Hello, I&apos;m Karla, a photographer focused on UX/UI Design (Sketch, Flinto, Invision, CSS, HTML, Lean UX, Design Thinking).</p>\n                <p className=\"app-text\">I studied photography in a private school called TAI in Madrid, for 2 years. My specialty in photography is fashion photography. </p>\n                <a className=\"app-mail\" href=\"mailto:kortraits@gmail.com\">kortraits@gmail.com</a>\n              </div>\n              <Wheel className=\"wheel\" src={aboutWheel} alt=\"logo\" />\n            </div>\n            <div className='media'>\n              <img className=\"logo-medium\" src={medium} alt=\"Link to medium\" />\n              <img className=\"logo-linkedin\" src={linkedin} alt=\"Link to linkedin\" />\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}